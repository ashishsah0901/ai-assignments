function GREEDY_KRUSKAL'sMST(graph) returns a solution or failure
node <-- a node with STATE = graph.INITIAL-STATE
frontier <-- load with starting node, N <-- number of nodes
explored_path_pair <-- an empty set
spanning_tree_path <-- an empty set
mst_path <-- an empty set
Hcnp <-- 0, Count <-- 0
loop do
  if EMPTY?(frontier) then return failure
  node <-- pop(frontier)
  explored_path_pair <-- path cost
  if TERMINAL-TEST(node.STATE) then
    Hcnp <-- Minimum(explored_path_pair)
    frontier <-- load at minimum path cost
    loop do
      node <-- POP(frontier)
      spanning_tree_path <-- path_cost
      if NO_CYCLE(node.STATE) then
      count <-- increment counter
      if count is equal to N - 1 then return a Solution(mst_path <-- spanning_tree_path)